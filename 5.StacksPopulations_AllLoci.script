# !/bin/sh
# This script creates a whitelist file of loci and PopMap for subset of samples and loci and runs populations from from Stacks using the list of putantively paralogous loci as blacklist.
#
# The subset of samples correspond to:
# * BerAll: all populations from Berberis alpina (including Za), Berberis moranensis (An population), Berberis trifolia (outgroup).
# * BerwoOut: all populations from Berberis alpina (including Za), Berberis moranensis (An population) but EXCLUDING outgroup (B. trifolia)
# * woZaOut: excluding samples from El Zamorano population (Za) and Berberis trifolia (outgroup)
# * BerSS: Berberis alpina sensu stricto, populations (Aj, Iz, Ma, Pe, Tl, To) ie Berall excluding Za, Out and An.
#
# The subset of loci correspond to:
# * AllLoci: all RAD loci
# * HitGP: loci that positively blasted against green plants
# * NohitGP: loci that didn't blasted against green plants
#
#
################################################################################################
#

# 
###################################### AllLoci
#
###
### Run script to generate SNP while list for all loci and Population maps for subsets BerAl, woZaOut, BerSS. 
### They will be stored in the the subfolder AllLoci inside the folder with the SNP.SNPs data.
###
#
# Crete directory for output and run script:
mkdir -p ../data.out/PopSamples_m3/AllLoci
R CMD BATCH whitelist_AllLoci.r
#
###
### Copy data to stacks relevant subdirectory to run populations
###
# 
#
# Use a loop to move data for BerAll woZaOut BerSS and for Including and Excluding Paralogs
#
# Create directories for paralogs grouping
for a in "ExcludingParalogs" "IncludingParalogs"; do
mkdir -p ../../1stacks/stacks/PopSamples/PopSamples_m3/$a/
# For blasting groups
for i in "BerAll" "BerwoOut" "woZaOut" "BerSS"; do
# Create directories for outputs in 1stacks. This will be the WD for running populations
mkdir -p ../../1stacks/stacks/PopSamples/PopSamples_m3/$a/AllLoci
mkdir -p ../../1stacks/stacks/PopSamples/PopSamples_m3/$a/AllLoci/$i
## Copy data to relevant directories
# For whitelists:
cp ../../3Berberis_phylogeo/data.out/PopSamples_m3/AllLoci/PopSamples_BeralpBt_m3.SNP.SNPs_whitelist.tsv ../../1stacks/stacks/PopSamples/PopSamples_m3/$a/AllLoci/$i
#
# For the Population Map:
cp ../../3Berberis_phylogeo/data.out/PopSamples_m3/AllLoci/PopSamples_BeralpBt_m3.SNP.SNPs_PopMap* ../../1stacks/stacks/PopSamples/PopSamples_m3/BeralpBt/ 
# Create folders for output
mkdir -p ../../1stacks/stacks/PopSamples/PopSamples_m3/$a/AllLoci/$i/out.replicates 
mkdir -p ../../1stacks/stacks/PopSamples/PopSamples_m3/$a/AllLoci/$i/out.noreplicates 
done
done
#
# Remove unnecesary files from data.out
rm -rf ../data.out/PopSamples_m3/AllLoci

# Copy putatively paralogs blacklist to 1stacks
cp ../docs/potentialparalogs ../../1stacks/stacks/PopSamples/PopSamples_m3/ExcludingParalogs

#
#
#
####
#### Run Stacks populations
####
#
# Run populations Stacks program to estimate Fst and export 
# Filter input so that to process a locus it must be present in -p of the populations 
# export to Structure and plink format, recording only the first SNP per locus
# Do the same with data including and excluding replicates (see output in out.replicates and out.noreplicates)
#
#
#
### IncludingParalogs
#
cd ../../1stacks/stacks/PopSamples/PopSamples_m3/IncludingParalogs/AllLoci/
for i in "BerAll" "BerwoOut" "woZaOut" "BerSS"; do
## Go to WD
cd $i/
# Delete posible .fst outs from previous runs
rm ../../../BeralpBt/batch_1.fst_summary.tsv
#

## For data EXLUDING replicates
# Run populations
populations -P ../../../BeralpBt/ -M ../../../BeralpBt/PopSamples_BeralpBt_m3.SNP.SNPs_PopMap_norep_$i.tsv -b 1 -p 7 -f p_value --plink --structure --write_single_snp -W ./PopSamples_BeralpBt_m3.SNP.SNPs_whitelist.tsv
#
# Run plink to recode .ped to .raw plink file. This reads the plink.ped file and creates a plink.raw file in the WD
plink --file ../../../BeralpBt/batch_1.plink --allow-no-sex --recodeA
#
# Have outputs to output folder to have them in a single place
mv ../../../BeralpBt/batch_1.fst_summary.tsv ./out.noreplicates
mv ../../../BeralpBt/batch_1.plink* ./out.noreplicates
mv ../../../BeralpBt/batch_1.populations* ./out.noreplicates
mv ../../../BeralpBt/batch_1.sumstats* ./out.noreplicates
mv ./plink* ./out.noreplicates
mv ../../../BeralpBt/batch_1.structure.tsv ./out.noreplicates/
#
## For data INCLUDING replicates
# Run populations
populations -P ../../../BeralpBt/ -M ../../../BeralpBt/PopSamples_BeralpBt_m3.SNP.SNPs_PopMap_withrep_$i.tsv -b 1 -p 7 -f p_value --plink --structure --write_single_snp -W ./PopSamples_BeralpBt_m3.SNP.SNPs_whitelist.tsv
#
# Run plink to recode .ped to .raw plink file. This reads the plink.ped file and creates a plink.raw file in the WD
plink --file ../../../BeralpBt/batch_1.plink --allow-no-sex --recodeA
#
# Have outputs to output folder to have them in a single place
mv ../../../BeralpBt/batch_1.fst_summary.tsv ./out.replicates
mv ../../../BeralpBt/batch_1.plink* ./out.replicates
mv ../../../BeralpBt/batch_1.populations* ./out.replicates
mv ../../../BeralpBt/batch_1.sumstats* ./out.replicates
mv ./plink* ./out.replicates
mv ../../../BeralpBt/batch_1.structure.tsv ./out.replicates/
#
#
#
### ExcludingParalogs
#
cd ../../../ExcludingParalogs/AllLoci/
for i in "BerAll" "BerwoOut" "woZaOut" "BerSS"; do
## Go to WD
cd $i/
# Delete posible .fst outs from previous runs
rm ../../../BeralpBt/batch_1.fst_summary.tsv
#

## For data EXLUDING replicates
# Run populations
populations -P ../../../BeralpBt/ -M ../../../BeralpBt/PopSamples_BeralpBt_m3.SNP.SNPs_PopMap_norep_$i.tsv -b 1 -p 7 -f p_value --plink --structure --write_single_snp -W ./PopSamples_BeralpBt_m3.SNP.SNPs_whitelist.tsv -B ../../potentialparalogs
#
# Run plink to recode .ped to .raw plink file. This reads the plink.ped file and creates a plink.raw file in the WD
plink --file ../../../BeralpBt/batch_1.plink --allow-no-sex --recodeA
#
# Have outputs to output folder to have them in a single place
mv ../../../BeralpBt/batch_1.fst_summary.tsv ./out.noreplicates
mv ../../../BeralpBt/batch_1.plink* ./out.noreplicates
mv ../../../BeralpBt/batch_1.populations* ./out.noreplicates
mv ../../../BeralpBt/batch_1.sumstats* ./out.noreplicates
mv ./plink* ./out.noreplicates
mv ../../../BeralpBt/batch_1.structure.tsv ./out.noreplicates/
#
## For data INCLUDING replicates
# Run populations
populations -P ../../../BeralpBt/ -M ../../../BeralpBt/PopSamples_BeralpBt_m3.SNP.SNPs_PopMap_withrep_$i.tsv -b 1 -p 7 -f p_value --plink --structure --write_single_snp -W ./PopSamples_BeralpBt_m3.SNP.SNPs_whitelist.tsv
#
# Run plink to recode .ped to .raw plink file. This reads the plink.ped file and creates a plink.raw file in the WD
plink --file ../../../BeralpBt/batch_1.plink --allow-no-sex --recodeA
#
# Have outputs to output folder to have them in a single place
mv ../../../BeralpBt/batch_1.fst_summary.tsv ./out.replicates
mv ../../../BeralpBt/batch_1.plink* ./out.replicates
mv ../../../BeralpBt/batch_1.populations* ./out.replicates
mv ../../../BeralpBt/batch_1.sumstats* ./out.replicates
mv ./plink* ./out.replicates
mv ../../../BeralpBt/batch_1.structure.tsv ./out.replicates/
#
#
#
####
#### Copy results to analyses folder:
####
for a in "ExcludingParalogs" "IncludingParalogs"; do
cd ../../..
cp -r ./$a ../../../../../../3Berberis_phylogeo/data.out/PopSamples_m3/
done
#
#












